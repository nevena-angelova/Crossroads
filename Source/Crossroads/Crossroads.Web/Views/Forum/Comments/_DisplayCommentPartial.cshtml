@using Crossroads.Web.ViewModels.ForumViewModels.Comments
@using Crossroads.Web.Infrastructure.Constants
@using Crossroads.Web.ViewModels.ForumViewModels
@using Crossroads.Common
@model DisplayCommentViewModel

<div id="comment@(Model.Id)" class="comment-container">
    <div class="comment">
        <div class="item-left">
            <a href="/Profile/DisplayProfile/?userName=@Model.AuthorUserName" target="_blank">
                @if (@Model.AuthorImage != null)
                {
                    <img src="@Url.Action("GetImage", "Profile", new { image = Model.AuthorImage, limitWidth = 60 })" alt="Аватар" />
                }
                else
                {
                    <img src="@Url.Content("~/Content/img/no-photo-60x60.png")" alt="Аватар" />
                }
            </a>
            <div class="flags">
                <span id="flagsComment@(Model.Id)">@Model.Flags</span> флага
            </div>
        </div>
        <div class="item-details">
            <div class="author-info">
                От:
                @Html.ActionLink(Model.AuthorUserName, "DisplayProfile",
                new { controller = "Profile", userName = Model.AuthorUserName },
                new { target = "_blank" })
                (@Model.AuthorPoints точки)
                на <em>@Model.DateCreated.ToString("", System.Globalization.CultureInfo.InvariantCulture)</em>

                @if (Model.DateEdited != null)
                {
                    <text>промяна:</text>
                    <em>@Model.DateEdited.Value.ToString("", System.Globalization.CultureInfo.InvariantCulture)</em>
                }
            </div>
            <div class="item-content">
                @Html.Raw(Model.Content)
            </div>
            <div class="item-btns">
                @if (Model.AuthorUserName == User.Identity.Name || User.IsInRole(GlobalConstants.AdminRole) || User.IsInRole(GlobalConstants.ModeratorRole))
                {
                    @Ajax.ActionLink("Промени", "EditComment", "Comments", new { commentId = Model.Id, userName = Model.AuthorUserName },
                new AjaxOptions
                {
                    HttpMethod = "GET",
                    UpdateTargetId = "editCommentForm" + Model.Id,
                    InsertionMode = InsertionMode.Replace,
                    OnSuccess = "formShow('#editCommentForm" + Model.Id + "')"
                }, new { @class = "edit-btn" })
                }

                @if (User.Identity.IsAuthenticated)
                {
                    string flagText = "Flag";
                    if (Model.Flagged == true)
                    {
                        flagText = "Unflag";
                    }

                    if (Model.AuthorUserName != User.Identity.Name)
                    {
                        @Ajax.ActionLink(flagText, "CommentFlag", "Comments", new { commentId = Model.Id },
                new AjaxOptions
                {
                    HttpMethod = "POST",
                    UpdateTargetId = "flagsComment" + Model.Id,
                    InsertionMode = InsertionMode.Replace,
                },
                new
                {
                    @class = "flag-btn",
                    id = "flagCommentBtn" + Model.Id,
                    onclick = "OnFlagBtnClick('#flagCommentBtn" + Model.Id + "')"
                })
                    }
                }
            </div>
        </div>
    </div>
    <div id="editCommentForm@(Model.Id)" class="edit-comment-form"></div>
</div>
