@using Crossroads.Web.ViewModels.ForumViewModels.Topics
@using Crossroads.Web.Infrastructure.Constants
@using Crossroads.Common
@model DisplayTopicViewModel
@{
    ViewBag.Title = Model.Topic.Title;
}

<h2 class="page-title">@Model.Topic.Title</h2>
<div class="topic">
    <div class="item-left">
        <a href="/Profile/DisplayProfile/?userName=@Model.Topic.AuthorUserName" target="_blank">
            @if (@Model.Topic.AuthorImage != null)
            {
                <img src="@Url.Action("GetImage", "Profile", new { image = Model.Topic.AuthorImage, limitWidth = 100 })" alt="Аватар" />
            }
            else
            {
                <img src="@Url.Content("~/Content/img/no-photo.png")" alt="Аватар" />
            }
        </a>
        <div class="votes">
            <span id="topicVotes">
                @Model.Topic.Votes
            </span>
            <div>
                @if (User.Identity.IsAuthenticated)
                {
                    @Ajax.ActionLink(" ", "TopicVote", "Topics", new { topicId = Model.Topic.Id, isVotePositive = true },
                    new AjaxOptions
                    {
                        UpdateTargetId = "topicVotes",
                        HttpMethod = "POST",
                        InsertionMode = InsertionMode.Replace,
                    }, new { @class = "vote up" })

                    @Ajax.ActionLink(" ", "TopicVote", "Topics", new { topicId = Model.Topic.Id, isVotePositive = false },
                    new AjaxOptions
                    {
                        UpdateTargetId = "topicVotes",
                        HttpMethod = "POST",
                        InsertionMode = InsertionMode.Replace,
                    }, new { @class = "vote down" })
                }
            </div>
        </div>
        <div class="views">
            @Model.Topic.Views посещения
        </div>
        <div class="flags">
            <span id="topicFlags">@Model.Topic.Flags</span> флага
        </div>
    </div>
    <div class="item-details">
        <div class="author-info">
            От:
            @Html.ActionLink(Model.Topic.AuthorUserName, "DisplayProfile",
                new { controller = "Profile", userName = Model.Topic.AuthorUserName },
                new { target = "_blank" })
            (@Model.Topic.AuthorPoints точки)
            на <em>@Model.Topic.DateCreated</em>

            @if (Model.Topic.DateEdited != null)
            {
                <text>промяна:</text>
                <em>@Model.Topic.DateEdited</em>
            }
        </div>
        <div class="item-content">
            @Html.Raw(Model.Topic.Content)
        </div>
        <div class="item-btns">

            @if (Model.Topic.AuthorUserName == User.Identity.Name || User.IsInRole(GlobalConstants.AdminRole) || User.IsInRole(GlobalConstants.ModeratorRole))
            {
                @Html.ActionLink("Промени", "EditTopic",
            new { topicId = Model.Topic.Id, categoryId = ViewBag.CategoryId, userName = Model.Topic.AuthorUserName },
            new { @class = "edit-btn" })
            }

            @if (User.Identity.IsAuthenticated)
            {
                @Ajax.ActionLink("Отговор", "AddAnswer", "Answers", new { topicId = Model.Topic.Id },
                new AjaxOptions
                {
                    HttpMethod = "GET",
                    UpdateTargetId = "newAnswerForm",
                    InsertionMode = InsertionMode.Replace,
                    OnSuccess = "DisplayTopic.formShow('#newAnswerForm')"
                }, new { @class = "new-answer-btn" })

                string flagText = "Flag";
                if (Model.Topic.Flagged == true)
                {
                    flagText = "Unflag";
                }

                if (Model.Topic.AuthorUserName != User.Identity.Name)
                {
                    @Ajax.ActionLink(flagText, "TopicFlag", "Topics", new { topicId = Model.Topic.Id },
                new AjaxOptions
                {
                    UpdateTargetId = "topicFlags",
                    HttpMethod = "POST",
                    InsertionMode = InsertionMode.Replace
                },
                new
                {
                    @class = "flag-btn",
                    id = "flagTopicBtn",
                    onclick = "DisplayTopic.onFlagBtnClick('#flagTopicBtn')",
                    title = "Докладва темата на модераторите."
                })
                }
            }
        </div>
    </div>
</div>
<div id="newAnswerForm" class="new-answer-form"></div>

@if (Model.Answers.Any())
{
    <h3 class="answers-label">Отговори</h3>
}

<div id="allAnswers" class="topic-answers-wrap">
    @Html.Partial(Partials.DisplayAnswers, Model.Answers)
</div>

@section JavaScript {
    @Scripts.Render("~/bundles/jquery")
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryajax")
    @Scripts.Render("~/bundles/jquery-ui")
    @Scripts.Render("~/Scripts/forum-topic.js")
}
